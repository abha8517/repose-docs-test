[{"topic_url": "8.3.0.1/architecture/configuration.html", "title": "8.3.0.1 | Architecture | Configuration", "content": "\nAfter installing Repose, config files can be found in /etc/repose.\nAt a minimum, Repose needs a container.cfg.xml and system-model.cfg.xml to start.\n\nThe container.cfg.xml config file tells Repose where to find component artifacts and where to deploy them while running.\nSee Container for more details.\n\nThe main config file is system-model.cfg.xml.\nThis file configures the list of filters, the deployment layout, and the location of the origin service.\nOut of the box, Repose is setup to run as a single node listening on port 8080, to run with no filters and services enabled, and to point to rackspace.com on port 80 as the origin service.\nSee System Model for more details.\n\nMost filters and services have their own configuration file.\nSee Filters and Services for more details.\n\nRepose reads the config files when it starts up and when a file gets updated.\nThe configuration files are checked for updates every 15 seconds.\nThis is not configurable nor can it be manually triggered.\n\nWhen the config files are invalid, Repose will continue using the previous known good configuration, or if Repose was just initially starting up, then it will return a 503 until the config files are fixed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/architecture/container.html", "title": "8.3.0.1 | Architecture | Container", "content": "\nThe container configuration is required to set up Repose.\nIt is used to tell the system where to look for component artifacts and where to deploy them.\n\nThe following example shows a basic configuration for the Container file.\n\nA user may configure different values for different Repose clusters.\nThis is achieved by including one or more cluster-config elements which map to clusters in the system-model.\nAll configuration within a cluster-config element is optional.\nWhen configuration is present, it will override the base configuration (i.e., the deployment-config element) values.\nThis functionality may be referred to as \"container configuration patching\" or simply as \"patching\".\n\nWhen discussing patches, one might notice that there is ambiguity in the rules for how patches are applied.\nBelow is a list of common ambiguities, and how they are handled in this context:\n\nNot all configuration is currently patchable.\nSome values (e.g., the deployment-directory) cannot be overridden due to internal system constraints.\nThe table below shows exactly what can and cannot be patched at this time.\n\nThere are two steps to supply a logging configuration for Repose:\n\nIf a user-supplied logging configuration file is not found, Repose programmatically sets default log4j properties.\nThis default properties add a\nConsoleAppender\nto the ROOT logger.\nThe output will be formatted using a\nPatternLayout\nset to the pattern %d %-4r [%t] %-5p %c - %m%n.\nThe default log level is set to DEBUG.\n\nSSL/TLS Client Authentication is being used more and more for communications between different enclaves.\nThis addition to the SSL/TLS handshake involves the Client presenting credentials to the Server in the same manner as the Server does to the Client.\nIf the credentials presented by the Client are not trusted, then the Server will sever the connection just as the Client would have if the situation was reversed.\nSince a Client initiates contact with the Server, the Server\u2019s credentials are simply to validate it is who the Client was trying to contact.\nThis is accomplished through Certificate Authorities (CA) and the Trust Hierarchies built into the Public Key Infrastructure (PKI).\nEven though you can optionally add a particular Server\u2019s credentials directly into a Client so that it will implicitly trust a particular Server essentially bypassing the distributed trust mechanism in favor of a more direct one, this is the only way to build a relationship for a Client to a Server.\n\nTo require SSL/TLS Client Authentication, set the need-client-auth attribute to True.\nWith this setting enabled, only Clients that have a Public Key imported into the trust store referenced by the truststore-filename element will be allowed to connect.\nThe truststore is a\nJava Keystore\nthat can be created/updated using the command line tool named aptly enough,\nkeytool.\nBelow is an example of importing a Client certificate (client.crt) into a truststore (truststore.jks):\n\nThis will update the keystore if it exists or create a new one if it doesn\u2019t.\nThe tool will also prompt for a password.\nThe password will be used to access an existing file or set as the password on a new one.\n\nTo use the truststore created/updated in the example above, the following would need to be added/updated in the container.cfg.xml file:\n\nFor more details, see:\n\nRepose Valve is based on Jetty and uses its services for SSL/TLS.\n\nTo make the Repose Proxy Server deployment option work with origin SSL/TLS requests:\n\nKeystore information is located within the <ssl-configuration> element as shown in the following example.\n\nSince security is a constantly moving target, any recommended configuration would quickly become out of date.\nA risk assessment should always be performed by the appropriately qualified people for your organization.\nLinks to industry-standard references are provided in the SSL References section below.\n\nRepose supports whitelisting and blacklisting specific protocols and ciphers by exposing portions of the Jetty\u2019s configuration via the container.cfg.xml file.\nYou can use this feature if a specific protocol or cipher has been compromised and you want to block its usage and secure Repose.\n\nIn the following example, the container configuration includes TLS v1.2 and TLS ciphers and excludes SSLv3 and SSL protocols.\n\nYou need to specify your keystore in the container configuration just as you would in Jetty.\n\nCertain attacks (such as Logjam) leverage the weakness of \"small\" Diffie-Hellman (DH) keys.\nTo mitigate the risk of such attackers, users may either exclude vulnerable ciphers, or lengthen the DH keys used by Repose.\nInstructions for the former are above.\nFor the latter, note the following:\n\nDiffie-Hellman (DH) keys of sizes less than 1024 bits have been deprecated because of their insufficient strength.\nIn JDK 8, you can customize the ephemeral DH key size with the system property jdk.tls.ephemeralDHKeySize.\n\nIn other words, the Java option -Djdk.tls.ephemeralDHKeySize=2048 can be passed when starting Repose to force the use of longer DH keys.\n\nFor more details, see Customizing DH Keys.\n\nFor more information about cipher suites and which ones to dis/allow when setting up Repose, see the following references:\n\nThe list of available ciphers and protocols varies depending on the JVM.\nWe have added a command line option to Repose Valve to display the available and default enabled ciphers and protocols:\n\nThis will dump a list of the default enabled SSL/TLS parameters for the JVM you\u2019re using.\nAdditionally, it will list all available ciphers and protocols, should you wish to use one of those.\n\nThis mode should only be used during development testing.\nThese settings are NOT intended for a production environment.\n\nWhen running in insecure mode, Repose will accept all certificates from external services with which it communicates (e.g. authentication service, origin service).\n\nWhen running the Valve deployment, Repose may be placed in insecure mode by passing in the -k option as follows:\n\nWhen running the ROOT.war deployment, Repose may be placed in insecure mode by passing in the following system property:\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/architecture/packages.html", "title": "8.3.0.1 | Architecture | Packages", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nProvides details about the packages Repose maintains for easy installation by our users.\n\nThis section outlines where Repose files live in the filesystem after being extracted from one of our packages.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/architecture/system-model.html", "title": "8.3.0.1 | Architecture | System Model", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Repose system-model.cfg.xml is the main configuration file for Repose.\nIt outlines the entire deployment layout for the service cluster.\nRepose must be aware of this in order to configure itself and correctly coordinate routing if necessary.\nAdditionally, the system model lets Repose know where the other Repose nodes reside.\nUsing this information, Repose can coordinate its own clustering to help load balance or share data among nodes that share common filters.\n\nThis section is only meant to explain certain quirks of the system model, and to provide a link to the comprehensive configuration schema.\nOther aspects of configuration will be explained through examples. See: Repose Deployment Scenarios\n\nSince port numbers below 1024 are privileged, Repose typically can not connect directly to them.\nThere are several ways to go about getting around this, but one of the most generally accepted ways is to execute the following commands with root privilege (e.g. sudo):\n\nIN PROGRESS\n\nIN PROGRESS\n\nIN PROGRESS\n\nIN PROGRESS\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/add-header.html", "title": "8.3.0.1 | Filters | Add Header Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Add Header filter adds configured headers to a request and/or response.\nYou can use the filter to add new headers with specific values to a request chain, and it can also replace (i.e. remove any existing headers with the configured name) headers.\n\nNone.\n\nThis filter has no dependencies on other filters and can be placed wherever it is needed in the filter chain.\n\nChanges to request headers vary based on configuration.\n\nThis filter does not modify the request body.\n\nThis filter is not it strictly required by any other filters.\n\nThis filter does not modify the response body.\n\nChanges to response headers vary based on configuration.\n\nThis filter does not modify the response code.\n\nThis configuration will add a foo header to the request with a value of bar and a quality of 0.5.\nAny existing headers with the same name will not be removed.\n\nThis configuration will add a foo header to the response with a value of bar and a quality of 0.5.\nAny existing headers with the same name will be removed.\n\nThis configuration will add a foo header to the request with a value of bar and a quality of 0.8.\nAny existing request headers with the same name will be removed.\nIt will also add a baz header to the response with a value of qux and a quality of 0.4.\nAny existing response headers with the same name will not be removed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/api-validator.html", "title": "8.3.0.1 | Filters | API Validator Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/body-extractor-to-header.html", "title": "8.3.0.1 | Filters | Body Extractor to Header Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/body-patcher.html", "title": "8.3.0.1 | Filters | Body Patcher Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/compression.html", "title": "8.3.0.1 | Filters | Compression Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/content-type-stripper.html", "title": "8.3.0.1 | Filters | Content Type Stripper Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/cors.html", "title": "8.3.0.1 | Filters | CORS Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Cross-Origin Resource Sharing (CORS) filter allows Repose to manage CORS requests without the origin service needing to understand CORS.\nFor an introduction to CORS, see the CORS Overview section below.\n\nBefore enabling the CORS filter, you should be familiar with the CORS specification and the associated security implications.\nEnabling CORS can increase an endpoint\u2019s exposure.\nConfiguring CORS improperly could expose Cross-Site Request Forgery (CSRF) vulnerabilities in the origin service that were previously hidden by not supporting CORS.\n\nThe presence and values of certain headers will indicate what kind of request is being made.\nAll of these headers will be supplied by the client making the request.\n\n* If the Origin header matches the original Host header in the request, it will be considered a non-CORS request.\nSee the Origin Header section for more details.\n\nThe CORS filter should be one of the first filters, if not the first filter, in the filter chain in order to properly handle CORS Preflight Requests and to properly handle exposing response headers in CORS Actual Requests.\nIf you want to rate limit CORS Preflight Requests, you can add the following filters before the CORS filter in the filter chain:\n\nThis Rate Limiting filter would be in addition to any Rate Limiting filter you may already have in place.\nThe first Rate Limiting filter would filter only by IP address, and the second Rate Limiting filter would continue to rate limit the way it\u2019s currently set up.\n\nThis filter does not add any headers to the request.\n\nThis filter does not modify the request body.\n\nThis filter is not strictly required by any other filters.\n\nThis filter does not modify the response body, but it will set it in certain early termination conditions.\nSee the [Response status codes] section for more details.\n\nThe filter will add the following headers to the response when the request is allowed to proceed:\n\nThe following headers will be added to the response when the request is rejected by this filter:\n\nThese are the conditions in which the CORS filter will stop processing the request and immediately return a response:\n\nA basic CORS configuration would allow all origins to use any standard HTTP method on all resources.\n\nIf you configure an origin regex of .* or any other regex that could allow untrusted origins, you may want to consider securing your API from CSRF exploits.\n\nTo limit which origins are allowed to initiate a CORS request to your API, you can specify a literal value or a regular expression that the Origin header must match in order to proceed with the request.\n\nIf specific resources support additional HTTP methods, you can configure this per-resource using a regex to specify the path or paths.\nThe resource configuration is processed in the configured order, so the first path regex to match the request URI will be used in conjunction with the global allowed-methods configuration.\nThis is used to determine the complete list of allowed methods to return in response to a CORS Preflight Request and to determine whether or not a CORS Actual Request is allowed to proceed past this filter.\n\nThis is not a substitution for authorization.\nRequests that do not contain the Origin header are not CORS requests and completely bypass this validation.\n\nUsing this configuration, you would see the following behavior:\n\nThis is an example configuration with notes on all of the required and optional elements and attributes.\n\nCORS is not a security feature.\nIt is a mechanism for informing clients (e.g., web browsers) of conditions when client-side security may be slightly relaxed in certain circumstances.\nThat is, the security lies completely within the client.\nSimply leaving out the Origin header in the request completely bypasses the CORS spec (and thus this filter).\nYou should continue securing your API in other ways using proper authentication and authorization mechanisms.\n\nFor security purposes, web browsers follow the Same-Origin policy.\nIf a user were to visit a website containing malicious code, the web browser would prevent the malicious code from trying to send requests to different websites on the user\u2019s behalf.\nThis is especially useful when the user is authenticated on those other websites.\nHowever, sometimes a website needs to be able to get data or perform an action on a different website, but how can the client know which websites allow this and under what circumstances?\nThis is where CORS comes in.\n\nInstead of the web browser immediately dropping any attempt to send a request to a third-party server, it can send the request to that server with CORS headers to see if the server trusts the origin server.\nThe address of the origin server is sent in the Origin header.\nIf the response from the third-party server does not contain the appropriate CORS headers (i.e., the server is not CORS aware) or if the CORS headers indicate the Origin is not allowed to send requests to it, the browser will drop the response (i.e., the client-side code from the origin server will not get to see the contents of the response from the third-party server).\n\nEven though the web browser will prevent the client-side code from seeing the response from the third-party server, the request may have still been processed by the third-party server.\nTo mitigate this issue, the web browser will send a CORS Preflight Request to the third-party server to first verify that the Origin and HTTP method are allowed (among a few other things) before sending the CORS Actual Request.\nIf the response to the CORS Preflight Request indicates the CORS Actual Request would not include the appropriate CORS headers, the web browser will not proceed with sending the CORS Actual Request.\n\nBecause the CORS Preflight Request is asking if a CORS Actual Request would be allowed and not for the request to actually be processed, this type of request is completely handled by the CORS filter in Repose.\nNo other filters after the CORS filter will process the request, and the request will not reach the origin service.\n\nA web browser may choose to skip sending a CORS Preflight Request if the HTTP method is GET, HEAD, or POST, the request headers do not include anything other than Accept, Accept-Language, and Content-Language, and the request does not require any cookies, HTTP authentication, nor use of any client-side SSL certificates.\nOtherwise, the web browser must make a CORS Preflight Request.\nFor example, if your origin service requires an X-Auth-Token header, the web browser will always send a CORS Preflight Request before sending the CORS Actual Request.\n\nSome web browsers (e.g., Chrome and Safari) will send the Origin header for same-origin (i.e., non-CORS) requests in addition to CORS requests which is technically allowed under RFC 6454.\nThis is typically not a concern for servers handling CORS because the unnecessary inclusion of CORS headers will be ignored by the client if they are not needed to process the response.\nBecause Repose has the added ability to reject requests with unapproved origins, additional logic is required to differentiate between CORS requests and same-origin requests when the Origin header is present.\n\nRequests are considered same-origin requests when the Origin header matches the original Host header set by the client according to the comparison rules in RFC 6454 Section 5.\nIf the X-Forwarded-Host header is present in the request, the first value will be used as the host.\nIf the header is not present or it cannot be parsed as a URI (when the URI scheme is prepended to it), then the Host header will be used instead.\nThis check is not performed for CORS Preflight Requests since web browsers should not be sending a CORS preflight header for a same-origin request.\n\nIf a proxy server sitting between the client and Repose rewrites the Host without updating the X-Forwarded-Host header with the original value, Repose will not be able to correctly identify same-origin requests coming from that client.\nThis may result in requests from that client being incorrectly rejected on the basis that they are CORS requests when they may in fact be same-origin requests.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/derp.html", "title": "8.3.0.1 | Filters | Delegation Response Processor (DeRP) Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/destination-router.html", "title": "8.3.0.1 | Filters | Destination Router Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/echo.html", "title": "8.3.0.1 | Filters | Echo Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/exception.html", "title": "8.3.0.1 | Filters | Exception Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/forwarded-proto.html", "title": "8.3.0.1 | Filters | Forwarded Protocol Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/header-normalization.html", "title": "8.3.0.1 | Filters | Header Normalization filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/header-translation.html", "title": "8.3.0.1 | Filters | Header Translation Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/header-user.html", "title": "8.3.0.1 | Filters | Header User Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/herp.html", "title": "8.3.0.1 | Filters | Highly Efficient Record Processor (HERP) Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Highly Efficient Record Processor (HERP) filter logs an event for each API request.\nThese logs provide information regarding the processing of each request.\nThe logs can be inspected to view the usage of a service and to perform auditing.\nEvents are recorded even if the API request is rejected by Repose before reaching the origin service.\n\nThis filter has no required headers.\n\nThis filter has no dependencies on other filters and can be placed wherever it is needed in the filter chain.\n\nIn order for the HERP filter to process and record every request, no preceding filter in the filter chain may write a response.\nTo prevent short-circuiting without changing behavior, delegation has been added to many Repose filters.\nSee Delegation in Repose for more details.\n\nThis filter does not create/modify any request headers.\n\nThis filter does not modify the request body.\n\nThis filter is not it strictly required by any other filters.\nHowever, the DeRP filter commonly follows the HERP filter.\n\nThe HERP filter will not process responses sent from preceding filters.\nThe DeRP filter can be used to perform delegation.\nPlace the DeRP filter after the HERP filter so that responses sent by any preceding filters are delegated.\n\nThis filter does not modify the response body.\n\nThis filter does not create/modify any response headers.\n\nThis filter does not modify the response code.\n\nTo use the HERP filter, you need to:\n\nThe HERP filter allows user-configurable filtering along with optional pre and post log identifiers.\n\nEach filterOut block contains all of the criteria required for a single filter.\nIf any of the individual criterion in the match elements contained within a filterOut element fail, then that filter fails and it goes on to evaluate the next one.\nIf any of the filterOut blocks fully match, then the event is filtered and not logged to the post-filter log.\nIn other words, the match elements are logically AND\u2019d and the filterOut blocks are logically OR\u2019d.\n\nThe {{methodLabel}} variable value is provided by the api-validator filter.\nIf you aren\u2019t using that filter, {{methodLabel}} will return empty string.\n\nThe HERP filter allows user-configurable filtering along with optional pre and post log identifiers.\n\nEach filterOut block contains all of the criteria required for a single filter.\nIf any of the individual criterion in the match elements contained within a filterOut element fail, then that filter fails and it goes on to evaluate the next one.\nIf any of the filterOut blocks fully match, then the event is filtered and not logged to the post-filter log.\nIn other words, the match elements are logically AND\u2019d and the filterOut blocks are logically OR\u2019d.\n\nFor information about using the Flume with the HERP filter for user access event recording, see CF Flume Sink for more details.\n\nIn the template element, certain template keys may be used to add dynamic content to the text being logged.\nAny valid key enclosed in brackets (i.e., {{<key>}}) will be replaced, brackets included, by the value associated with that key at runtime.\nNote that key names are case sensitive.\nA list of supported keys follows:\n\nThe HERP filter also provides helper functions to the templating engine.\nThese helpers work like the keys above, but take some input.\nFor example, assuming the HTTP request method is a GET, {{cadfMethod requestMethod}} would be replace by \"read/get\".\nThe following helpers are available:\n\nIf you expect heavy usage, you should use a logging tool, such as Logstash, for managing events and logs and should not write events to files.\nEven if you rely on auditing, it is not recommended that you use the file system with the audit logs.\nRepose has developed CF Flume Sink to eliminate disk space and log file issues.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/ip-user.html", "title": "8.3.0.1 | Filters | IP User Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/iri-validator.html", "title": "8.3.0.1 | Filters | IRI Validator Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/keystone-v2-basic-auth.html", "title": "8.3.0.1 | Filters | Keystone v2 Basic Auth Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/keystone-v2.html", "title": "8.3.0.1 | Filters | Keystone v2 Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/merge-header.html", "title": "8.3.0.1 | Filters | Merge Header Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/openstack-identity-v3.html", "title": "8.3.0.1 | Filters | Openstack Identity v3 Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/rackspace-auth-user.html", "title": "8.3.0.1 | Filters | Rackspace Auth User Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Rackspace Auth User filter is for usage in Repose instances that sit in front of Keystone v1 and v2 deployments.\nIt\u2019s meant to be used for login requests to capture username for both rate limiting and user access events.\n\nThis filter has no dependencies on other filters.\n\nThis filter does not modify the request body.\n\nThis filter needs to appear in the filter chain before any of the filters that need the information that derives and provides.\nThat means the rate limiting filter when rate limiting, and herp filter when doing user access events.\nWhen doing both the order should be:\n\nFor further details about the reasoning behind this ordering see user access events.\n\nThis filter does not modify the response body.\n\nThis filter does not modify any response headers.\n\nThere are no cases where this filter will terminate further processing of the filter chain.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/rate-limiting.html", "title": "8.3.0.1 | Filters | Rate Limiting Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/scripting.html", "title": "8.3.0.1 | Filters | Scripting Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThe Scripting filter enables users to write custom filters for Repose using a variety of scripting languages.\nCustom filters can be used to perform arbitrary processing with access to the bindings described below.\n\nNone.\n\nThis filter has no dependencies on other filters and can be placed wherever it is needed in the filter chain.\n\nChanges to request headers vary based on configuration.\n\nChanges to the request body varies based on configuration.\n\nThis filter is not it strictly required by any other filters.\n\nChanges to the response body varies based on configuration.\n\nChanges to response headers vary based on configuration.\n\nChanges to the response code varies based on configuration.\n\nAll supported languages are currently compilable.\n\nAn enumeration of all supported language names (e.g., lua and luaj) that will be accepted in configuration can be found in the XML schema linked on this page.\n\nBindings are variables defined by the Scripting filter which can be used in scripts.\n\nCurrently supported bindings are detailed by the following table:\n\nInvoking the doFilter method on the filterChain object is necessary to pass the request/response along.\nIf doFilter is not invoked, the scripting filter will return the response object as-is up the filter chain.\nNo later filter nor the origin service will have a chance to process the request.\n\nThe performance of this filter will vary depending on configuration.\n\nFor the simple task of adding a header to a request, this filter performs comparably to the Add Header Filter.\n\nScripts written in a compilable language as shown above will always be compiled.\nThis should dramatically improve performance.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/simple-rbac.html", "title": "8.3.0.1 | Filters | Simple Role Based Access Control (RBAC) Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/slf4j-http-logging.html", "title": "8.3.0.1 | Filters | SFL4J HTTP Logging Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/translation.html", "title": "8.3.0.1 | Filters | Translation Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/uri-normalization.html", "title": "8.3.0.1 | Filters | URI Normalization Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/uri-stripper.html", "title": "8.3.0.1 | Filters | URI Stripper Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/uri-user.html", "title": "8.3.0.1 | Filters | URI User Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/url-extractor-to-header.html", "title": "8.3.0.1 | Filters | URL Extractor to Header Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/valkyrie-authorization.html", "title": "8.3.0.1 | Filters | Valkyrie Authorization Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/filters/versioning.html", "title": "8.3.0.1 | Filters | Versioning Filter", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\n???.\n\nThis configuration will ???.\n\nRemove this section if not needed.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/api-event-flume.html", "title": "8.3.0.1 | Recipes | API Access Event Recording with Flume", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/basic-authentication.html", "title": "8.3.0.1 | Recipes | Basic Authentication", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/custom-filter-for-repose.html", "title": "8.3.0.1 | Recipes | Custom Filter for Repose", "content": "\nUnfortunately, this page is not going to teach you how to create a custom filter for Repose.\nFortunately, this page is going to direct you to a page that will teach you how to create a custom filter for Repose.\n\nFor a detailed guide on how to create a custom filter for Repose, see our hello world filter project.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/delegation.html", "title": "8.3.0.1 | Recipes | Delegation", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/distributed-rate-limiting.html", "title": "8.3.0.1 | Recipes | Distributed Rate Limiting", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/docker.html", "title": "8.3.0.1 | Recipes | Docker", "content": "\nWith the advent of container technology, Repose can be fully encapsulated and run as a service.\nBy bundling the environment with the software itself, deploying Repose becomes a much quicker, simpler process.\nDocker boasts security through isolation, and when run on platforms with native support, it requires very little overhead.\nTo make everything as easy and versatile as possible, the Repose team will release Docker images on Docker Hub alongside every release of Repose.\n\nTo run Repose in Docker, there are just two basic steps:\n\nTo find out more about Docker, including how to install and operate it, visit the official Docker documentation at:\n\nhttps://docs.docker.com/\n\nAll official, published Docker images for Repose, can be found on Docker Hub at:\n\nhttps://hub.docker.com/r/rackerlabs/repose/\n\nThe Dockerfile used to build the Docker images has been copied below for the sake of convenience.\n\nTo modify and/or build a Repose Docker image from the Dockerfile, follow these steps:\n\nLet\u2019s break that command down and take a closer look at what it is doing:\n\nAfter you have acquired a Repose Docker image, you can run Repose by creating and starting a Docker container from that image.\nFor example, the following command could be use:\n\nLet\u2019s break that command down and take a closer look at what it is doing:\n\nNow if we wanted to, we could change the Docker options that define the environment that Repose will run in.\nIf we wanted to forward the random ports instead of explicitly declaring the port mapping, we could drop the -p 8080:8080 option and pass the -P flag instead.\n\nAfter running that command, you should be able to see Repose running inside a Docker container!\nUse the following command to show all running containers:\n\nOnce running, you may wish to inspect the internal state of the container.\nWell, the default command for the official Repose Docker images will run Repose in the foreground, and as a result, simply attaching to the container with a command like the following will only allow interaction with the Repose process:\n\nInstead, you can use a command like the following to run a new bash session inside of your running container:\n\nIf you need to access Repose log files, the recommended way of doing so would be to mount a Docker volume when starting the container using a command like the following:\n\nYou will notice that this command is very similar to the command provided in the Running section, but with one more option: -v /var/log/repose:/var/log/repose.\nThis option simply mounts the Repose log directory in the container to the same directory on the host.\n\nCustom artifacts are not currently supported by our Docker images.\nIf you would like to deploy custom code in Repose running in Docker, please Contact Us!\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/echo-server.html", "title": "8.3.0.1 | Recipes | Echo Server", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/getting-started.html", "title": "8.3.0.1 | Recipes | Getting Started", "content": "\nRepose is an open-source, RESTful middleware platform that transparently integrates with your existing infrastructure.\nTechnically, it is a pseudo-transparent reverse proxy.\n\nRepose provides highly scalable, extensible solutions to common API processing tasks including authentication, rate limiting, access control, logging, and more.\n\nAdditionally, Repose allows services to use Enterprise Integration Patterns.\n\nRepose takes incoming requests from clients and adjusts them for consumption by services by passing the requests through a series of extensible filters.\nThese filters provide functionality such as authentication, authorization, rate-limiting, and request modification.\nRepose can run as a stand-alone proxy server between the client and the origin service.\nThe Repose instance can be on the same host as the origin service, but it doesn\u2019t have to be.\nThis deployment method, illustrated in the following graphic, is called Valve.\n\nRepose can also run within a servlet container such as GlassFish or Tomcat using the WAR deployment.\n\nYou can decide which configuration works best for you, and you can tweak many of your configurations without having to restart Repose \u2013 it will pick up configuration changes on the fly, making it easy to configure and test.\n\nRepose can be configured to use a distributed data store service where cached information is exchanged across multiple nodes.\nThis makes Repose fault tolerant with proven performance.\n\nRepose provides a series of customizable filters that you can configure to perform a large number of API tasks.\nThe full list of filters is on the Filters page.\nFollowing are some of the most common ones:\n\nAnyone can use Repose!\nIt is an open-source platform for the general public to consume, share, and improve.\n\nTo get Repose, log in to your server and run the Installation commands for your desired environment.\nThen, configure your origin service endpoint in the system model, and you are ready to configure filters and services that work for you.\nWe have many sample configurations that you can use to get started.\nOr, because Repose is open source, you can build your own stacks of reusable software components.\n\nInstallation instructions are provided for Debian package managers (e.g., APT) and RPM package managers (e.g., Yum).\n\nCertain deployment methods will handle environment setup automatically.\n\nThe most common and preferred way to run Repose is as a standalone application using the Valve installation.\nThis installation allows Repose to be executed either as a Linux service (e.g. systemd) or directly from the installed JAR.\nAn alternative would be to run Repose inside an existing servlet container (e.g. Tomcat, GlassFish) using the WAR installation.\n\nWhile Repose can be installed manually, there are other deployment options available.\nHowever, these other methods do require a little more System Administration knowledge which is not covered here.\nSee: Deployment\n\nThis is the most common setup and is detailed on the Valve Installation page.\n\nAfter installing it this way, consult the Running Valve page for details on starting and stopping Repose.\n\nInstructions for installing the WAR are on the WAR Installation page.\n\nAfter installing the WAR, there is additional setup to get everything working with Tomcat.\nSee Tomcat Setup for more details.\n\nSee GlassFish Setup for more details.\n\nSee HTTP container attributes\n\nOnce you know how you\u2019ll want to configure Repose, you may want to automate the deployment using a configuration management tool or reusable container.\n\nIf you don\u2019t already have a Linux environment ready, you can use Vagrant to easily create a new virtual machine running the Linux distribution of your choice.\nFor more details, see: Vagrant\n\nDocker and Repose make a fantastic team together.\nFor more details, see: Docker\n\nThere is an unsupported starter module in the GitHub repository rackerlabs/puppet-repose.\n\nThere is an unsupported starter cookbook in the GitHub repository rackerlabs/cookbook-repose.\n\nIf you\u2019re ready to dive into configuration, see Configuration for more details.\nWe also have a series of Recipes that will walk you through some of our common use cases.\n\nRepose has been battle tested in production environments and in our performance testing environments.\nSee Performance Best Practices for more details.\n\nFor further information on common configuration scenarios, visit our Recipes page.\n\nFor details on common troubleshooting techniques, visit our Troubleshooting page.\n\nFor a list of frequently asked questions and answers, visit our FAQ page.\n\nContact us! We would be happy to address any questions, comments, or concerns with anything having to do with Repose!\n\nIf you wonder what we\u2019ve been working on lately, visit our release notes.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/glassfish-setup.html", "title": "8.3.0.1 | Recipes | Glassfish Setup", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThis page describes how to run the Repose WAR in a Glassfish container.\n\nMake sure to install the Repose WAR first!\n\nIN PROGRESS\n\nIN PROGRESS\n\nIN PROGRESS\n\nIN PROGRESS\n\nIN PROGRESS\n\nRepose needs two parameters set in order to start with an optional third parameter to set the location of the config directory.\n\nIN PROGRESS\n\nAlternatively, the web.xml file within the war itself can be modified to include the following:\n\nRepose can use internal dispatch (within the Glassfish container) to access your deployed WARs.\n\nFor example, if you had sample.war deployed, you could set the configured root-path to /sample and then access it as if it was on the root path (e.g. curl localhost:8080 would point to localhost:8080/sample/).\n\nIN PROGRESS\n\nIN PROGRESS\n\nYou can use curl or HTTPie to send a request to Glassfish.\n\nIf you are using any of the filters that can impact the body of your request or response, and that body is JSON, you may see unexpected behavior.\nThis behavior stems from the fact that Glassfish ships with a different version of certain Jackson libraries than Repose, and the differing versions collide.\nDue to the way Java handles class loading, this can lead to weird cases where some of the classes are loaded from our newer version and some from Glassfish\u2019s older version.\nThis will cause `NoClassDefFoundException`s as it\u2019s looking in the wrong spot for some classes.\nGlassfish does has a configuration to resolve this problem; this configuration tells Glassfish to not do the normal parent delegation of class loading, but to instead check the applications classpath first and then go up the parent classloader chain if it fails to find the needed classes.\nThis requires the addition of the following glassfish-web.xml:\n\nFor more information, see: here.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/http-container-attributes.html", "title": "8.3.0.1 | Recipes | HTTP Container Attributes", "content": "\nThis page lists container supported HTTP attributes and defaults so that we can understand the limitations using those containers.\n\n(http://tomcat.apache.org/tomcat-6.0-doc/config/http.html#Common_Attributes)\n\n(http://docs.codehaus.org/display/JETTY/Configuring+Connectors)\n\n(http://docs.oracle.com/cd/E19798-01/821-1753/auto126/index.html)\n\n(http://httpd.apache.org/docs/2.2/mod/core.html#limitrequestfieldsize)\n\nSometimes, depending on headers added by Repose, the default container limits can be exceeded.\nIf Repose is deployed as Root.WAR in a container and the header size limit is exceeded, then Repose will respond to the client with the same response code that was received from origin service.\n\nTwo example scenarios when it can exceed header size limit are:\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/performance-best-practices.html", "title": "8.3.0.1 | Recipes | Performance Best Practices", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/preventing-xml-bomb.html", "title": "8.3.0.1 | Recipes | Preventing XML bomb attacks", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/quick-setup.html", "title": "8.3.0.1 | Recipes | Quick Setup", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/rate-limiting.html", "title": "8.3.0.1 | Recipes | Rate Limiting", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/role-based-access-control.html", "title": "8.3.0.1 | Recipes | Role Based Access Control", "content": "\nYou can implement Role-Based Access Control (RBAC) with Repose with the Header Normalization, the Authorization, and the API Validator filters.\nThis guide takes you through the process of setting up RBAC with Repose.\n\nTo prevent users from submitting their own roles, you will need to blacklist headers using the Header Normalization filter.\n\nPlease refer to the Header Normalization filter documentation for more information about the available configuration options.\n\nThe Authentication filter will grab the user\u2019s roles from their authentication token and return those roles to Repose.\n\nPlease refer to the Keystone v2 filter documentation for more information about the available configuration options.\n\nThere are two mechanisms for doing the authorization side.\nIf your API is minimal or your just getting started with it, then you might find the Simple RBAC filter most useful.\nIt uses a very simple Domain Specific Language (DSL) that is similar to what other tools use for this basic mechanism.\nIf on the other had your API is large and/or your authorizations are complex, then you will need the heavy lifting of the API Validation filter.\nSince the Simple way is very self explanatory, we will only dive into the more complex way here.\n\nYou will do most of your RBAC configuration here.\n\nWe recommend that you build a table similar to the example below that contains endpoints and the roles that you wish to allow access to those endpoints.\n\nFrom here you have to decide which filter you want to use.\nThere are two options and they both use the same underlying mechanism for enforcement.\nThe only real difference between them is the first option is simple and easy, while the second option has more features which require a little extra configuration.\n\nThe Simple RBAC filter is configured using a Domain Specific Language (DSL) similar to the table above.\n\nThe best part about this filter is that if your API grows or simply becomes to complex for the Simple RBAC filter, then you can easily move to the full API Validator filter later.\nThere is even a setting available to save your Simple RBAC filter configuration in a manner that you can use it immediately with the API Validator filter.\n\nPlease refer to the Simple RBAC filter documentation for more information about the available configuration options.\n\nIf your API is complex or you simply need or are already using some of the extra features available in the API Validator filter, then this is the choice for you.\n\nWhen the enable-rax-roles attribute for the API Validator filter is set to true, the check-headers attribute will also be enabled regardless of your setting.\n\nIn the WADL, include rax:roles with appropriate values to ensure access is controlled as expected.\nWhen defining rax:roles at the resource level, be aware that all sub-resources and methods will inherit the roles allowed at the resource level.\nMultiple roles can be specified by separating the role names with a space.\nIf multiple roles are authorized for a resource and method, the user must have one of the allowed roles but is not required to have all roles.\nExample API Validator filter configuration for RBAC.\nThe following example shows a section of the API Validator filter and WADL that is configured for RBAC.\n\nWith the above WADL and API Validator filter configuration, the following behavior will apply with a request with a user that has the a:observer role.\n\nPlease refer to the API Validator filter documentation for more information about the available configuration options.\n\nThe status codes returned by authorization failures, via rax:roles extensions (403), differs from the statuses returned when roles are defined directly in the validator.cfg.xml (404 and 405).\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/running-valve.html", "title": "8.3.0.1 | Recipes | Running Valve", "content": "\nValve allows Repose to run as a standalone application.\nRepose currently supports multiple ways of starting and stopping in an effort to provide the most flexibility to operators during the industry wide conversion from System V and Upstart to systemd.\nThe SystemV and Upstart mechanisms are currently deprecated, and in the future, only support for the systemd way will be provided by the standard installation.\n\nThis is the recommended way of starting/stopping Repose.\nBy default, Repose will log to both the systemd logging system via standard out/err as well as system logs in /var/log/repose.\nThis behavior can be modified by updating the log4j2.xml in the Repose configuration directory to only log to one or the other depending on the need.\n\nThis is the old way of starting/stopping Repose.\n\nAlternatively, you could start/stop Repose using the init.d script directly.\n\nAs a Java application, Repose can also be run directly from a JAR file.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/tomcat-setup.html", "title": "8.3.0.1 | Recipes | Tomcat Setup", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThis page describes how to run the Repose WAR in a Tomcat container.\n\nMake sure to install the Repose WAR first!\n\nThe easiest way to deploy the WAR to Tomcat is to copy it to Tomcat\u2019s deployment directory.\n\nRepose needs two parameters set in order to start with an optional third parameter to set the location of the config directory.\n\nAlternatively, the web.xml file within the war itself can be modified to include the following:\n\nYou may want to increase the size of the maximum allowed HTTP header size and number of allowed headers.\nSee Tomcat\u2019s HTTP Connector documentation for more details.\n\nRepose can use internal dispatch (within the Tomcat container) to access your deployed WARs.\n\nFor example, if you had sample.war deployed, you could set the configured root-path to /sample and then access it as if it was on the root path (e.g. curl localhost:8080 would point to localhost:8080/sample/).\n\nYou can use curl or HTTPie to send a request to Tomcat.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/user-access-events.html", "title": "8.3.0.1 | Recipes | User Access Events", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/vagrant.html", "title": "8.3.0.1 | Recipes | Vagrant", "content": "\nIf you need a quick Linux environment setup to test or evaluate Repose, Vagrant makes it easy to create a new virtual machine with the Linux distribution of your choice installed.\n\nVagrant needs a virtual machine provider such as VirtualBox.\nVirtualBox can be installed on a variety of operating systems.\nCheck out the VirtualBox Downloads page and install the binary for your operating system.\n\nCheck out the Vagrant Downloads page and install the package for your operating system.\n\nIt is extremely useful to install the Vagrant plugin for the VirtualBox Guest Additions.\nTo do so, run:\n\nFrom here you can either install a few more tools and use the automated build environment that the Repose team uses to verify a release, or you can manually set up your environment.\n\nCheck out the Git Downloads page and install the package for your operating system.\n\nTo start the Vagrant sandbox using the build environment, you will need to clone the repository and then run execute build task with the desired properties.\nOnce the sandbox is running, the environment can be accessed directly by running the vagrant ssh command from the directory containing the Vagrantfile.\n\nTo access the Repose instance from the guest, simply send a request to the configured port of 8080.\n\nThe Vagrant guest VM\u2019s also attempt to expose ports for both the Repose instance and Java Debug Wire Protocol (JDWP).\nFor Debian/Apt VM\u2019s these are 18088 & 18038 respectively and for RHEL/RPM VM\u2019s 18089 & 18039.\nTo access the Repose instance from the host simply send a request to the exposed port.\nSimilarly, to debug the Repose instance, connect a remote debugger to the JDWP port.\n\nNow you\u2019re ready to use Vagrant to create a new virtual machine instance with a Linux distro installed.\nRepose has been tested on Ubuntu and CentOS.\nSetup instructions are provided for both.\nFor additional information on Vagrant commands, check out the Vagrant Docs for the Command-Line Interface.\n\nWhen you\u2019re done with your virtual machine instance, use these instructions to clean up your resources.\n\nIf you want to save any config files you created or the Repose logs, you can copy them to the /vagrant directory which for most instances is a shared mount between the Guest VM and Host OS where the Vagrantfile is located.\nIn the manual example above, it would be the repose-vm directory.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/valve-installation.html", "title": "8.3.0.1 | Recipes | Valve Installation", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nCovers the typical Repose setup\u2009\u2014\u2009a Valve installation (i.e., standalone application) running as a Linux service.\n\nFor instructions on starting Repose after setup, see: Running Valve.\n\nFor more information about the packages themselves, see: Packages.\n\nNative packages are not yet provided for all operating systems.\n\nTo install Repose Valve on systems that do not support Repose packages, see: Manual\n\nThis installation method is not recommended unless necessary.\nThis method does not verify or modify the environment to accommodate Repose.\n\nIf you want to manually download the application archives, they are available in our Nexus Repository.\nThe primary archives are:\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/war-installation.html", "title": "8.3.0.1 | Recipes | WAR Installation", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nCovers setting up Repose inside of a user-provided servlet container.\n\nFor information on setting up a container after installation, see: Tomcat Setup or GlassFish Setup.\n\nFor more information about the packages themselves, see: Packages.\n\nNative packages are not yet provided for all operating systems.\n\nTo install the Repose WAR on systems that do not support Repose packages, see: Manual\n\nThis installation method is not recommended unless necessary.\nThis method does not verify or modify the environment to accommodate Repose.\n\nIf you want to manually download the application archives, they are available in our Nexus Repository.\nThe primary archives are:\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/recipes/xsd-versioning.html", "title": "8.3.0.1 | Recipes | XSD Versioning Guidelines", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/atom-feed-consumption.html", "title": "8.3.0.1 | Services | Atom Feed Consumption Service", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/datastores.html", "title": "8.3.0.1 | Services | Datastores", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/health-check.html", "title": "8.3.0.1 | Services | Health Check service", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/http-connection-pool.html", "title": "8.3.0.1 | Services | HTTP Connection Pool service", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/phone-home.html", "title": "8.3.0.1 | Services | Phone Home Service", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/services/response-messaging.html", "title": "8.3.0.1 | Services | Response Messaging service", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/welcome/faq.html", "title": "8.3.0.1 | Welcome to Repose | FAQ", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThese are frequently asked questions.  If you don\u2019t find an answer to your question here, check out the Contact Us page for information on getting in touch with the team.\n\nPlease read our Troubleshooting page.\n\nIN PROGRESS\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/welcome/release-notes.html", "title": "8.3.0.1 | Welcome to Repose | Release Notes", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/welcome/style-guide.html", "title": "8.3.0.1 | Welcome to Repose | Style Guide", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nDon\u2019t wrap text at a fixed column width.\nInstead, put each sentence on its own line, a technique called sentence per line.\nThis technique is similar to how you write and organize source code.\nThe result can be spectacular.\n\nHere are some of the advantages of using the sentence per line style:\n\nWe picked up this idea from the writing guide in the Neo4j documentation.\nHowever, it seems like the idea dates back a discovery by Buckminster Fuller in the 1930s, who called it ventilated prose.\nThe technique was also recommended in 2009 by Brandon Rhodes in a blog post about Semantic Linefeeds.\n\nIt\u2019s important to note that this technique works because AsciiDoc doesn\u2019t treat wrapped lines in prose as hard line breaks.\nAt least, it doesn\u2019t show up that way to the reader.\nThe line breaks between contiguous lines of prose will not be visible in the rendered document (i.e., as the reader sees it).\n\nWhile line breaks don\u2019t appear in the output, a blank line introduces a new paragraph. Use paragraphs to structure your text and don\u2019t make them too large.\n\nSection titles should be defined using Atx-style.\n\nIn the Atx-style, the section title is defined on a single line.\nThe section title begins with one or more equal characters (i.e., =) followed by a space and the section title.\nThe number of leading characters representing the depth.\nThe top-level section is reserved for the document title, so the first section in the document will have two leading characters.\n\nOf the supported section title styles, this style requires the least number of characters, and it\u2019s intuitive since the number of leading characters represents the heading level.\n\nUse * to define lists rather than -.\nNesting in lists will correspond to the number of leading asterisks.\n", "site_name": "http://openrepose.org/versions/"}, {"topic_url": "8.3.0.1/welcome/troubleshooting.html", "title": "8.3.0.1 | Welcome to Repose | Troubleshooting", "content": "\nThis version of the docs is a work in progress.\nIf you don\u2019t see what you are looking for check the legacy wiki.\n\nThis page summarizes the different methods which can be used to get more information on the state of Repose and how it interacts with the clients, origin service, and third party services.\nMost of these methods can be used in a production deployment.\n\nThis should be used in a controlled environment (i.e. not production) and should not be used for more than a few minutes at a time due to the amount of logging that occurs.\n\nIntrafilter Logging allows you to see the modified output of each filter as the request goes through the filter chain which makes debugging configurations easier.\nThis setting adds a UUID header to the request and another to the response.\n\nWhen the logger is set to TRACE, you will see the following information:\n\nThe TRACE setting is the most verbose logging setting.\n\nTo enable intrafilter logging, the corresponding named log4j2 logger should be set to the TRACE level.\nThis can be achieved by adding a line like the following to the log4j2.xml file in your Repose configuration directory.\n\nThis is an example of the log line that you will see for the request and for the response.\nThese lines are formatted for convenience.\nThe log line will be a single line without carriage returns.\n\nRepose can report on which filters handled the client request and how long each filter took.\nThis allows you to verify that all expected filters handled the request.\n\nTo enable this, add the following header to the client request:\nx-trace-request: true\n\nThe Repose response to the client will contain the following header added to the response, one for each filter which handled the request:\nx-[filter name]: [time]ms\n\nThe x-trace-request header can be easily added to a test request using curl and the -H [header] flag.\nFor example:\n\nThe following example contains three headers which Repose added to the response.\nThese headers indicate that the the client-auth, http-logging, and default-router all handled the request, taking 0, 6, and 0 ms respectively.\n\nYou can view all of the data being sent and received to the origin service and other third party APIs (e.g. Identity) by turning on Apache HttpClient logging.\n\nIn log4j2.xml, update the org.apache logger to the debug level. For example:\n\nRepose instruments its internal operations, such as the types of response codes returned from Repose or the origin service and the number of active requests.\nThis information is published through JMX and can be accessed through any JMX client.\nJConsole is a popular choice to access information published through JMX as it is shipped with the JDK.\n\nIN PROGRESS\n", "site_name": "http://openrepose.org/versions/"}]